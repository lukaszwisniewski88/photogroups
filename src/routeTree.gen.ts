/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppAccountImport } from './routes/_app.account'
import { Route as AppAlbumsIndexImport } from './routes/_app.albums.index'
import { Route as AppAlbumsAlbumIDImport } from './routes/_app.albums.$albumID'
import { Route as AppAccountConfirmImport } from './routes/_app.account.confirm'
import { Route as AppAlbumsAlbumIDPhotoIDImport } from './routes/_app.albums.$albumID.$photoID'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const AppAlbumsUploadLazyImport = createFileRoute('/_app/albums/upload')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth.register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth.login.lazy').then((d) => d.Route))

const AppAccountRoute = AppAccountImport.update({
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)

const AppAlbumsIndexRoute = AppAlbumsIndexImport.update({
  path: '/albums/',
  getParentRoute: () => AppRoute,
} as any)

const AppAlbumsUploadLazyRoute = AppAlbumsUploadLazyImport.update({
  path: '/albums/upload',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app.albums.upload.lazy').then((d) => d.Route),
)

const AppAlbumsAlbumIDRoute = AppAlbumsAlbumIDImport.update({
  path: '/albums/$albumID',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountConfirmRoute = AppAccountConfirmImport.update({
  path: '/confirm',
  getParentRoute: () => AppAccountRoute,
} as any)

const AppAlbumsAlbumIDPhotoIDRoute = AppAlbumsAlbumIDPhotoIDImport.update({
  path: '/$photoID',
  getParentRoute: () => AppAlbumsAlbumIDRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/account': {
      preLoaderRoute: typeof AppAccountImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_app/account/confirm': {
      preLoaderRoute: typeof AppAccountConfirmImport
      parentRoute: typeof AppAccountImport
    }
    '/_app/albums/$albumID': {
      preLoaderRoute: typeof AppAlbumsAlbumIDImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/upload': {
      preLoaderRoute: typeof AppAlbumsUploadLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/': {
      preLoaderRoute: typeof AppAlbumsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/albums/$albumID/$photoID': {
      preLoaderRoute: typeof AppAlbumsAlbumIDPhotoIDImport
      parentRoute: typeof AppAlbumsAlbumIDImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AppRoute.addChildren([
    AppAccountRoute.addChildren([AppAccountConfirmRoute]),
    AppAlbumsAlbumIDRoute.addChildren([AppAlbumsAlbumIDPhotoIDRoute]),
    AppAlbumsUploadLazyRoute,
    AppAlbumsIndexRoute,
  ]),
  AuthRoute.addChildren([AuthLoginLazyRoute, AuthRegisterLazyRoute]),
])

/* prettier-ignore-end */
